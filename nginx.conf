user nginx;
worker_processes auto;
worker_rlimit_nofile 4096;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 2048;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging optimized for performance
    access_log off;
    error_log /var/log/nginx/error.log warn;

    # Performance optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 30;
    keepalive_requests 100;
    reset_timedout_connection on;
    client_body_timeout 10;
    send_timeout 2;
    client_max_body_size 20M;
    client_body_buffer_size 128k;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;
    output_buffers 1 32k;
    postpone_output 1460;

    # File cache - aggressive caching for static assets
    open_file_cache max=10000 inactive=30s;
    open_file_cache_valid 60s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;

    # Gzip compression - high performance
    gzip on;
    gzip_vary on;
    gzip_min_length 1000;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json
        image/svg+xml;

    server {
        listen 80;
        server_name _;
        root /usr/share/nginx/html;
        index index.html;

        # Main page
        location = / {
            try_files /index.html =404;
            expires 1h;
            add_header Cache-Control "public, no-transform";
        }

        # HTML pages - short cache
        location ~* \.html$ {
            expires 1h;
            add_header Cache-Control "public, no-transform";
        }

        # CSS and JS - long cache with versioning
        location ~* \.(css|js)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            access_log off;

            # Enable range requests
            add_header Accept-Ranges bytes;
        }

        # Portfolio images - optimized for gallery browsing
        location ~* ^/pages/portfolio/.*\.(jpg|jpeg|png|gif|webp|avif)$ {
            expires 30d;
            add_header Cache-Control "public, no-transform";
            access_log off;

            # Enable range requests for large images
            add_header Accept-Ranges bytes;

            # Optimize image serving
            add_header Vary Accept;

            # Preload hints for portfolio browsing
            add_header Link "</pages/portfolio/>; rel=prefetch" always;
        }

        # Portfolio directory index
        location ^~ /pages/portfolio/ {
            expires 6h;
            add_header Cache-Control "public, no-transform";

            # Enable directory browsing if needed
            autoindex on;
            autoindex_exact_size off;
            autoindex_localtime on;
        }

        # Other images - medium cache
        location ~* \.(jpg|jpeg|png|gif|ico|svg|webp|avif)$ {
            expires 7d;
            add_header Cache-Control "public, no-transform";
            access_log off;
            add_header Accept-Ranges bytes;
        }

        # Fonts - very long cache
        location ~* \.(woff|woff2|eot|ttf|otf)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Access-Control-Allow-Origin "*";
            access_log off;
        }

        # Pages directory - general handling
        location /pages/ {
            try_files $uri $uri/ $uri/index.html =404;

            # Cache directory indexes
            location ~* /pages/.*/$ {
                expires 30m;
                add_header Cache-Control "public, no-transform";
            }
        }

        # Security and cleanup
        location ~ /\. {
            deny all;
        }

        location ~* \.(bak|backup|old|orig|tmp)$ {
            deny all;
        }

        # Health check for monitoring
        location = /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Error pages
        error_page 404 /index.html;
        error_page 500 502 503 504 /index.html;
    }
}